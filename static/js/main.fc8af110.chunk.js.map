{"version":3,"sources":["context/CovidDataContext.jsx","utils/utils.js","components/TableColumnHeader.jsx","components/Table.jsx","components/ComposedBarLineChart.jsx","components/VaxChart.jsx","utils/stateNames.js","components/StatePage.jsx","context/CovidDataProvider.jsx","App.jsx","index.js"],"names":["CovidDataContext","createContext","overviewData","stateData","addCommasToNumber","x","toString","replace","formatPercentage","num","TableColumnHeader","text","active","alignRight","sortAscending","onClick","scope","className","classNames","invisible","rotate","size","COLUMNS","id","formatFn","data","Table","useState","sortType","setSortType","setSortAscending","useContext","setOverviewData","history","useHistory","useEffect","fetch","then","res","json","map","state","totalCases","Math","round","actuals","cases","totalDeaths","deaths","casesPerHundred","population","deathsPerThousand","partialVaccinationsPerHundred","metrics","vaccinationsInitiatedRatio","fullVaccinationsPerHundred","vaccinationsCompletedRatio","testPositivity","testPositivityRatio","transformOverviewData","sort","a","b","sortDataCallback","sortData","length","idx","handleHeaderClick","stateId","push","DATA_DISPLAY_NAMES","newCases","newDeaths","hospitalizations","sevenDayAvg","tooltipValueFormatter","value","name","tooltipLabelFormatter","dateStr","format","parseISO","xAxisTickFormatter","date","getMonth","ComposedBarLineChart","title","dataKey","barColor","lineColor","displayData","key","day","arr","slice","prevDay","reduce","acc","curr","getSingleDataValueWithAverage","ResponsiveContainer","height","width","ComposedChart","XAxis","axisLine","tickLine","tickFormatter","YAxis","Bar","fill","isAnimationActive","Line","dot","stroke","strokeWidth","Tooltip","formatter","labelFormatter","CartesianGrid","vertical","opacity","style","color","partialVaccinations","fullVaccinations","VaxChart","AreaChart","Area","type","stateNames","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MP","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","StatePage","stateName","useLocation","pathname","split","setStateData","console","log","actualsTimeseries","vaccinationsInitiated","vaccinationsCompleted","hospitalBeds","currentUsageCovid","transformStateData","catch","err","aria-label","to","aria-current","CovidDataProvider","children","Provider","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAOeA,EALUC,wBAAc,CACtCC,aAAc,GACdC,UAAW,K,QC4DL,SAASC,EAAkBC,GACjC,OAAOA,EAAEC,WAAWC,QAAQ,kCAAmC,KAGzD,SAASC,EAAiBC,GAChC,MAAM,GAAN,OAAUA,EAAV,K,oBCpCcC,EA9BW,SAAC,GAMpB,IALNC,EAKK,EALLA,KACAC,EAIK,EAJLA,OACAC,EAGK,EAHLA,WACAC,EAEK,EAFLA,cACAC,EACK,EADLA,QAEA,OACC,oBAAIC,MAAM,MAAMD,QAASA,EAAzB,SACC,sBACCE,UAAWC,IAAW,SAAU,CAC/B,sBAAuBL,IAFzB,UAKC,sBAAMI,UAAWC,IAAW,CAAE,aAAcL,IAA5C,SACEF,IAEF,cAAC,IAAD,CACCM,UAAWC,IACV,gBACA,oBACA,CAAEC,WAAYP,EAAQQ,OAAQN,IAE/BO,KAAM,WCXLC,EAAU,CACf,CACCC,GAAI,QACJZ,KAAM,QACNa,SAAU,SAACC,GAAD,OAAUA,IAErB,CACCF,GAAI,aACJZ,KAAM,cACNa,SAAUpB,GAEX,CACCmB,GAAI,cACJZ,KAAM,eACNa,SAAUpB,GAEX,CACCmB,GAAI,kBACJZ,KAAM,gBACNa,SAAU,SAACC,GAAD,OAAUA,IAErB,CACCF,GAAI,oBACJZ,KAAM,mBACNa,SAAU,SAACC,GAAD,OAAUA,IAErB,CACCF,GAAI,gCACJZ,KAAM,uBACNa,SAAUhB,GAEX,CACCe,GAAI,6BACJZ,KAAM,mBACNa,SAAUhB,GAEX,CACCe,GAAI,iBACJZ,KAAM,uBACNa,SAAUhB,IA4GGkB,MAxGD,WACb,MAAgCC,mBAASL,EAAQ,GAAGC,IAApD,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOb,EAAP,KAAsBgB,EAAtB,KAEA,EAA0CC,qBAAW/B,GAA7CE,EAAR,EAAQA,aAAc8B,EAAtB,EAAsBA,gBAEhBC,EAAUC,cAEhBC,qBAAU,WACTC,MAvDD,sFAwDGC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACNP,EFtEG,SAA+B9B,GACrC,OAAOA,EAAasC,KAAI,SAACC,GACxB,MAAO,CACNA,MAAOA,EAAMA,MACbC,WAAYC,KAAKC,MAA4B,IAAtBH,EAAMI,QAAQC,OAAe,IACpDC,YAAaJ,KAAKC,MAA6B,IAAvBH,EAAMI,QAAQG,QAAgB,IACtDC,gBACCN,KAAKC,MAAOH,EAAMI,QAAQC,MAAQL,EAAMS,WAAc,KACtD,GACDC,kBACCR,KAAKC,MAAOH,EAAMI,QAAQG,OAASP,EAAMS,WAAc,KACvD,GACDE,8BACCT,KAAKC,MAAiD,IAA3CH,EAAMY,QAAQC,4BACzB,GACDC,2BACCZ,KAAKC,MAAiD,IAA3CH,EAAMY,QAAQG,4BACzB,GACDC,eACCd,KAAKC,MAA0C,IAApCH,EAAMY,QAAQK,qBAA8B,OEmDvCC,CAAsBpB,SAEtC,CAACP,IAEJG,qBAAU,WACLjC,GAAgB0B,GACnBI,EAmEH,SAAkBP,EAAMG,EAAUd,GACjC,OAAO,YAAIW,GAAMmC,KAGlB,SAA0BhC,EAAUd,GACnC,OAAO,SAAC+C,EAAGC,GACV,MAAiB,UAAblC,EACCd,EACIgD,EAAElC,IAAaiC,EAAEjC,IAAa,EAAI,EAElCiC,EAAEjC,IAAakC,EAAElC,IAAa,EAAI,EAGpCd,EACJ+C,EAAEjC,GAAYkC,EAAElC,GAChBkC,EAAElC,GAAYiC,EAAEjC,IAdEmC,CAAiBnC,EAAUd,IApE/BkD,CAAS9D,EAAc0B,EAAUd,MAGhD,CAACc,EAAUd,IAed,OAASZ,EAAa+D,OACrB,sBAAKhD,UAAU,SAAf,UACC,oBAAIA,UAAU,OAAd,0EAGA,qBAAKA,UAAU,mBAAf,SACC,wBAAOA,UAAU,kCAAjB,UACC,gCACC,6BACEK,EAAQkB,KAAI,WAAe0B,GAAf,IAAG3C,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAP,OACZ,cAAC,EAAD,CAECA,KAAMA,EACNC,OAAQW,IAAOK,EACff,WAAoB,IAARqD,EACZpD,cAAeA,EACfC,QAAS,kBA7BS,SAACQ,GACtBA,IAAOK,EACVE,GAAkBhB,IAElBe,EAAYN,GACZO,GAAiB,IAwBIqC,CAAkB5C,KAL5BA,UAUT,gCACErB,EAAasC,KAAI,SAACC,GAAD,OACjB,oBAEC1B,QAAS,kBA7BQqD,EA6Ba3B,EAAMA,WA5B1CR,EAAQoC,KAAR,iBAAuBD,IADD,IAACA,GA2BlB,SAIE9C,EAAQkB,KAAI,WAAmB0B,GAAnB,IAAG3C,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,OACZ,oBAECP,UAAWC,IAAW,CACrB,aAAcK,IAAOK,EACrB,aAAcsC,EAAM,IAJtB,SAOE1C,EAASiB,EAAMlB,KANXA,OALFkB,EAAMA,oBAqBjB,oBAAIxB,UAAU,cAAd,yB,yHCzHIqD,EAAqB,CAC1BC,SAAU,YACVC,UAAW,aACXC,iBAAkB,mBAClBC,YAAa,iBAGRC,EAAwB,SAACC,EAAOC,GACrC,MAAO,CAACzE,EAAkBwE,GAAQN,EAAmBO,KAGhDC,EAAwB,SAACC,GAC9B,OAAOC,YAAOC,YAASF,GAAU,gBAG5BG,EAAqB,SAACH,GAC3B,IAAMI,EAAOF,YAASF,GACtB,OAAII,EAAKC,WAAa,IAAM,EACpBJ,YAAOG,EAAM,SAEd,IAGO,SAASE,EAAT,GAMX,IALHC,EAKE,EALFA,MACA7D,EAIE,EAJFA,KACA8D,EAGE,EAHFA,QACAC,EAEE,EAFFA,SACAC,EACE,EADFA,UAEMC,EAAcjE,EHDd,SAAuCA,EAAMkE,GACnD,OAAKlE,EACEA,EAAKe,KAAI,SAACoD,EAAK1B,EAAK2B,GAAS,IAAD,EAC5BnB,EACLmB,EACEC,MAAM5B,EAAM,EAAGA,EAAM,GACrB1B,KAAI,SAACuD,GAAD,OAAaA,EAAQJ,MACzBK,QAAO,SAACC,EAAKC,GAAN,OAAeD,GAAOC,GAAQ,KAAI,GAAK,EAEjD,OAAO,EAAP,CACCf,KAAMS,EAAIT,MADX,cAEEQ,EAAMC,EAAID,IAFZ,4BAGchD,KAAKC,MAAM8B,IAHzB,KARiB,KGCfyB,CAA8B1E,EAAM8D,GACpC,KACH,OACC,qCACC,oBAAItE,UAAU,aAAd,SAA4BqE,IAC3BI,EACA,cAACU,EAAA,EAAD,CAAqBC,OAAQ,IAAKC,MAAM,OAAxC,SACC,eAACC,EAAA,EAAD,CAAe9E,KAAMiE,EAArB,UACC,cAACc,EAAA,EAAD,CACCjB,QAAQ,OACRkB,UAAU,EACVC,UAAU,EACVC,cAAezB,IAEhB,cAAC0B,EAAA,EAAD,CACCrB,QAASA,EACTkB,UAAU,EACVC,UAAU,EACVC,cAAevG,IAEhB,cAACyG,EAAA,EAAD,CACCtB,QAASA,EACTuB,KAAMtB,EACNuB,mBAAmB,IAEpB,cAACC,EAAA,EAAD,CACCzB,QAAQ,cACR0B,KAAK,EACLC,OAAQzB,EACR0B,YAAa,EACbJ,mBAAmB,IAGpB,cAACK,EAAA,EAAD,CACCC,UAAW1C,EACX2C,eAAgBxC,IAEjB,cAACyC,EAAA,EAAD,CAAeC,UAAU,EAAOC,QAAS,UAI3C,qBACCxG,UAAU,mDACVyG,MAAO,CAAErB,OAAQ,SAFlB,SAIC,cAAC,IAAD,CAAYhF,KAAM,IAAKsG,MAAOnC,S,qBChF7BlB,EAAqB,CAC1BlB,8BAA+B,oBAC/BwE,oBAAqB,oBACrBrE,2BAA4B,mBAC5BsE,iBAAkB,oBAGb3C,EAAqB,SAACH,GAC3B,IAAMI,EAAOF,YAASF,GACtB,OAAII,EAAKC,WAAa,IAAM,EACpBJ,YAAOG,EAAM,SAEd,IAGFR,EAAwB,SAACC,EAAOC,GACrC,MAAO,CAACrE,EAAiBoE,GAAQN,EAAmBO,KAG/CC,EAAwB,SAACC,GAC9B,OAAOC,YAAOC,YAASF,GAAU,gBAGnB,SAAS+C,EAAT,GAA6B,IAATrG,EAAQ,EAARA,KAClC,OACC,qCACC,oBAAIR,UAAU,aAAd,0BACCQ,EACA,cAAC2E,EAAA,EAAD,CAAqBC,OAAQ,IAAKC,MAAM,OAAxC,SACC,eAACyB,EAAA,EAAD,CAAWtG,KAAMA,EAAjB,UACC,cAAC+E,EAAA,EAAD,CACCjB,QAAQ,OACRkB,UAAU,EACVC,UAAU,EACVC,cAAezB,IAEhB,cAAC0B,EAAA,EAAD,CACCH,UAAU,EACVC,UAAU,EACVC,cAAenG,IAEhB,cAACwH,EAAA,EAAD,CACCC,KAAK,WACL1C,QAAQ,gCACR2B,OAAO,UACPJ,KAAK,UACLC,mBAAmB,IAEpB,cAACiB,EAAA,EAAD,CACCC,KAAK,WACL1C,QAAQ,6BACRuB,KAAK,UACLC,mBAAmB,IAGpB,cAACK,EAAA,EAAD,CACCC,UAAW1C,EACX2C,eAAgBxC,IAEjB,cAACyC,EAAA,EAAD,CAAeC,UAAU,EAAOC,QAAS,UAI3C,qBACCxG,UAAU,mDACVyG,MAAO,CAAErB,OAAQ,SAFlB,SAIC,cAAC,IAAD,CAAYhF,KAAM,IAAKsG,MAAO,iBCjFnC,IAwDeO,EAxDI,CAClBC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,uBACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,QACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,YACJC,GAAI,2BACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,eACJC,GAAI,cACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,WC1CU,SAASC,IACvB,IACMC,EADeC,cAAbC,SACmBC,MAAM,WAAW,IAAM,GAElD,EAAoC7J,qBAAW/B,GAAvCG,EAAR,EAAQA,UAAW0L,EAAnB,EAAmBA,aAkBnB,OAhBA1J,qBAAU,WATa,IAACM,EAUlBtC,EAAUsL,IACdrJ,OAXsBK,EAWAgJ,EAXD,+CACiBhJ,EADjB,8DAYnBJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OACLsJ,EAAa,2BACT1L,GADQ,kBAEVsL,ENAA,SAA4BtL,GAClC2L,QAAQC,IAAI5L,GACZ,IAAQ+C,EAAe/C,EAAf+C,WACR,OAAO/C,EAAU6L,kBAAkBxJ,KAAI,SAACoD,GACvC,MAAO,CACNT,KAAMS,EAAIT,KACVZ,SAAUqB,EAAIrB,SACdC,UAAWoB,EAAIpB,UACfoD,oBAAqBhC,EAAIqG,sBACzBpE,iBAAkBjC,EAAIsG,sBACtB9I,8BAA+BwC,EAAIqG,sBAChCtJ,KAAKC,MAAOgD,EAAIqG,sBAAwB/I,EAAc,KACtD,GACA,KACHK,2BAA4BqC,EAAIsG,sBAC7BvJ,KAAKC,MAAOgD,EAAIsG,sBAAwBhJ,EAAc,KACtD,GACA,KACHuB,iBAAkBmB,EAAIuG,aAAaC,sBMlBnBC,CAAmB9J,SAGjC+J,OAAM,SAACC,GAAD,OAAST,QAAQC,IAAIQ,QAE5B,CAACpM,EAAW0L,EAAcJ,IAK5B,sBAAKxK,UAAU,GAAf,UACC,qBAAKuL,aAAW,aAAhB,SACC,qBAAIvL,UAAU,aAAd,UACC,oBAAIA,UAAU,kBAAd,SACC,cAAC,IAAD,CAAMwL,GAAG,IAAT,oBAED,oBAAIxL,UAAU,yBAAyByL,eAAa,OAApD,SACEjB,SAKJ,6BAAKvD,EAAWuD,KAEhB,sBAAKxK,UAAU,MAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,cAACoE,EAAD,CACC5D,KAAMtB,EAAUsL,GAChBlG,QAAQ,WACRD,MAAM,YACNE,SAAS,UACTC,UAAU,cAIZ,qBAAKxE,UAAU,wBAAf,SACC,cAACoE,EAAD,CACC5D,KAAMtB,EAAUsL,GAChBlG,QAAQ,YACRD,MAAM,aACNE,SAAS,UACTC,UAAU,iBAIb,sBAAKxE,UAAU,MAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,cAACoE,EAAD,CACC5D,KAAMtB,EAAUsL,GAChBlG,QAAQ,mBACRD,MAAM,mBACNE,SAAS,UACTC,UAAU,cAGZ,qBAAKxE,UAAU,wBAAf,SACC,cAAC6G,EAAD,CAAUrG,KAAMtB,EAAUsL,aC7E/B,IAkBekB,EAlBW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,EAAwCjL,mBAAS,IAAjD,mBAAOzB,EAAP,KAAqB8B,EAArB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOxB,EAAP,KAAkB0L,EAAlB,KAEA,OACC,cAAC,EAAiBgB,SAAlB,CACCjI,MAAO,CACN1E,eACAC,YACA6B,kBACA6J,gBALF,SAQEe,KCMWE,MAff,WACC,OACC,qBAAK7L,UAAU,oCAAf,SACC,cAAC,EAAD,UACC,cAAC,IAAD,CAAQ8L,SAAS,cAAjB,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxL,IACjC,cAAC,IAAD,CAAOsL,KAAK,SAASE,UAAW1B,cCRtC2B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.fc8af110.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst CovidDataContext = createContext({\n\toverviewData: [],\n\tstateData: {},\n});\n\nexport default CovidDataContext;\n","export function transformOverviewData(overviewData) {\n\treturn overviewData.map((state) => {\n\t\treturn {\n\t\t\tstate: state.state,\n\t\t\ttotalCases: Math.round(state.actuals.cases * 100) / 100,\n\t\t\ttotalDeaths: Math.round(state.actuals.deaths * 100) / 100,\n\t\t\tcasesPerHundred:\n\t\t\t\tMath.round((state.actuals.cases / state.population) * 1000) /\n\t\t\t\t10,\n\t\t\tdeathsPerThousand:\n\t\t\t\tMath.round((state.actuals.deaths / state.population) * 10000) /\n\t\t\t\t10,\n\t\t\tpartialVaccinationsPerHundred:\n\t\t\t\tMath.round(state.metrics.vaccinationsInitiatedRatio * 1000) /\n\t\t\t\t10,\n\t\t\tfullVaccinationsPerHundred:\n\t\t\t\tMath.round(state.metrics.vaccinationsCompletedRatio * 1000) /\n\t\t\t\t10,\n\t\t\ttestPositivity:\n\t\t\t\tMath.round(state.metrics.testPositivityRatio * 1000) / 10,\n\t\t};\n\t});\n}\n\nexport function transformStateData(stateData) {\n\tconsole.log(stateData);\n\tconst { population } = stateData;\n\treturn stateData.actualsTimeseries.map((day) => {\n\t\treturn {\n\t\t\tdate: day.date,\n\t\t\tnewCases: day.newCases,\n\t\t\tnewDeaths: day.newDeaths,\n\t\t\tpartialVaccinations: day.vaccinationsInitiated,\n\t\t\tfullVaccinations: day.vaccinationsCompleted,\n\t\t\tpartialVaccinationsPerHundred: day.vaccinationsInitiated\n\t\t\t\t? Math.round((day.vaccinationsInitiated / population) * 1000) /\n\t\t\t\t  10\n\t\t\t\t: null,\n\t\t\tfullVaccinationsPerHundred: day.vaccinationsCompleted\n\t\t\t\t? Math.round((day.vaccinationsCompleted / population) * 1000) /\n\t\t\t\t  10\n\t\t\t\t: null,\n\t\t\thospitalizations: day.hospitalBeds.currentUsageCovid,\n\t\t};\n\t});\n}\n\nexport function getSingleDataValueWithAverage(data, key) {\n\tif (!data) return null;\n\treturn data.map((day, idx, arr) => {\n\t\tconst sevenDayAvg =\n\t\t\tarr\n\t\t\t\t.slice(idx - 6, idx + 1)\n\t\t\t\t.map((prevDay) => prevDay[key])\n\t\t\t\t.reduce((acc, curr) => acc + (curr || 0), 0) / 7;\n\n\t\treturn {\n\t\t\tdate: day.date,\n\t\t\t[key]: day[key],\n\t\t\tsevenDayAvg: Math.round(sevenDayAvg),\n\t\t};\n\t});\n}\n\nexport function addCommasToNumber(x) {\n\treturn x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function formatPercentage(num) {\n\treturn `${num}%`;\n}\n","import { GoChevronDown } from \"react-icons/go\";\nimport classNames from \"classnames\";\n\nconst TableColumnHeader = ({\n\ttext,\n\tactive,\n\talignRight,\n\tsortAscending,\n\tonClick,\n}) => {\n\treturn (\n\t\t<th scope=\"col\" onClick={onClick}>\n\t\t\t<div\n\t\t\t\tclassName={classNames(\"d-flex\", {\n\t\t\t\t\t\"justify-content-end\": alignRight,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<span className={classNames({ \"text-right\": alignRight })}>\n\t\t\t\t\t{text}\n\t\t\t\t</span>\n\t\t\t\t<GoChevronDown\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\"flex-shrink-0\",\n\t\t\t\t\t\t\"align-self-center\",\n\t\t\t\t\t\t{ invisible: !active, rotate: sortAscending }\n\t\t\t\t\t)}\n\t\t\t\t\tsize={12}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</th>\n\t);\n};\n\nexport default TableColumnHeader;\n","import classNames from \"classnames\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CovidDataContext from \"../context/CovidDataContext\";\nimport {\n\ttransformOverviewData,\n\taddCommasToNumber,\n\tformatPercentage,\n} from \"../utils/utils\";\nimport TableColumnHeader from \"./TableColumnHeader\";\n\nconst DATA_URL =\n\t\"https://api.covidactnow.org/v2/states.json?apiKey=ec111c8b31de4650afe99b42a469b6d6\";\n\n// formatFn is applied to the raw data to display in a <td>\nconst COLUMNS = [\n\t{\n\t\tid: \"state\",\n\t\ttext: \"State\",\n\t\tformatFn: (data) => data,\n\t},\n\t{\n\t\tid: \"totalCases\",\n\t\ttext: \"Total Cases\",\n\t\tformatFn: addCommasToNumber,\n\t},\n\t{\n\t\tid: \"totalDeaths\",\n\t\ttext: \"Total Deaths\",\n\t\tformatFn: addCommasToNumber,\n\t},\n\t{\n\t\tid: \"casesPerHundred\",\n\t\ttext: \"Cases per 100\",\n\t\tformatFn: (data) => data,\n\t},\n\t{\n\t\tid: \"deathsPerThousand\",\n\t\ttext: \"Deaths per 1,000\",\n\t\tformatFn: (data) => data,\n\t},\n\t{\n\t\tid: \"partialVaccinationsPerHundred\",\n\t\ttext: \"Partially Vaccinated\",\n\t\tformatFn: formatPercentage,\n\t},\n\t{\n\t\tid: \"fullVaccinationsPerHundred\",\n\t\ttext: \"Fully Vaccinated\",\n\t\tformatFn: formatPercentage,\n\t},\n\t{\n\t\tid: \"testPositivity\",\n\t\ttext: \"Test Positivity Rate\",\n\t\tformatFn: formatPercentage,\n\t},\n];\n\nconst Table = () => {\n\tconst [sortType, setSortType] = useState(COLUMNS[0].id);\n\tconst [sortAscending, setSortAscending] = useState(false);\n\n\tconst { overviewData, setOverviewData } = useContext(CovidDataContext);\n\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tfetch(DATA_URL)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tsetOverviewData(transformOverviewData(json));\n\t\t\t});\n\t}, [setOverviewData]);\n\n\tuseEffect(() => {\n\t\tif (overviewData && sortType) {\n\t\t\tsetOverviewData(sortData(overviewData, sortType, sortAscending));\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [sortType, sortAscending]);\n\n\tconst handleHeaderClick = (id) => {\n\t\tif (id === sortType) {\n\t\t\tsetSortAscending(!sortAscending);\n\t\t} else {\n\t\t\tsetSortType(id);\n\t\t\tsetSortAscending(false);\n\t\t}\n\t};\n\n\tconst handleRowClick = (stateId) => {\n\t\thistory.push(`/state/${stateId}`);\n\t};\n\n\treturn !!overviewData.length ? (\n\t\t<div className=\"p-lg-5\">\n\t\t\t<h2 className=\"mb-3\">\n\t\t\t\tSort the table by category, or select a state for more data.\n\t\t\t</h2>\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<table className=\"table table-striped table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{COLUMNS.map(({ id, text }, idx) => (\n\t\t\t\t\t\t\t\t<TableColumnHeader\n\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\t\t\tactive={id === sortType}\n\t\t\t\t\t\t\t\t\talignRight={idx !== 0}\n\t\t\t\t\t\t\t\t\tsortAscending={sortAscending}\n\t\t\t\t\t\t\t\t\tonClick={() => handleHeaderClick(id)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{overviewData.map((state) => (\n\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\tkey={state.state}\n\t\t\t\t\t\t\t\tonClick={() => handleRowClick(state.state)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{COLUMNS.map(({ id, formatFn }, idx) => (\n\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\"table-info\": id === sortType,\n\t\t\t\t\t\t\t\t\t\t\t\"text-right\": idx > 0,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{formatFn(state[id])}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<h2 className=\"text-center\">Loading...</h2>\n\t);\n};\n\nfunction sortData(data, sortType, sortAscending) {\n\treturn [...data].sort(sortDataCallback(sortType, sortAscending));\n}\n\nfunction sortDataCallback(sortType, sortAscending) {\n\treturn (a, b) => {\n\t\tif (sortType === \"state\") {\n\t\t\tif (sortAscending) {\n\t\t\t\treturn b[sortType] <= a[sortType] ? -1 : 1;\n\t\t\t} else {\n\t\t\t\treturn a[sortType] <= b[sortType] ? -1 : 1;\n\t\t\t}\n\t\t}\n\t\treturn sortAscending\n\t\t\t? a[sortType] - b[sortType]\n\t\t\t: b[sortType] - a[sortType];\n\t};\n}\n\nexport default Table;\n","import React from \"react\";\nimport { parseISO, format } from \"date-fns\";\nimport {\n\tComposedChart,\n\tXAxis,\n\tYAxis,\n\tBar,\n\tLine,\n\tTooltip,\n\tCartesianGrid,\n\tResponsiveContainer,\n} from \"recharts\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport {\n\taddCommasToNumber,\n\tgetSingleDataValueWithAverage,\n} from \"../utils/utils\";\n\nconst DATA_DISPLAY_NAMES = {\n\tnewCases: \"New cases\",\n\tnewDeaths: \"New deaths\",\n\thospitalizations: \"Hospitalizations\",\n\tsevenDayAvg: \"7-day average\",\n};\n\nconst tooltipValueFormatter = (value, name) => {\n\treturn [addCommasToNumber(value), DATA_DISPLAY_NAMES[name]];\n};\n\nconst tooltipLabelFormatter = (dateStr) => {\n\treturn format(parseISO(dateStr), \"MMM d, yyyy\");\n};\n\nconst xAxisTickFormatter = (dateStr) => {\n\tconst date = parseISO(dateStr);\n\tif (date.getMonth() % 2 === 0) {\n\t\treturn format(date, \"MMM d\");\n\t}\n\treturn \"\";\n};\n\nexport default function ComposedBarLineChart({\n\ttitle,\n\tdata,\n\tdataKey,\n\tbarColor,\n\tlineColor,\n}) {\n\tconst displayData = data\n\t\t? getSingleDataValueWithAverage(data, dataKey)\n\t\t: null;\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"text-muted\">{title}</h4>\n\t\t\t{displayData ? (\n\t\t\t\t<ResponsiveContainer height={250} width=\"100%\">\n\t\t\t\t\t<ComposedChart data={displayData}>\n\t\t\t\t\t\t<XAxis\n\t\t\t\t\t\t\tdataKey=\"date\"\n\t\t\t\t\t\t\taxisLine={false}\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\ttickFormatter={xAxisTickFormatter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\tdataKey={dataKey}\n\t\t\t\t\t\t\taxisLine={false}\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\ttickFormatter={addCommasToNumber}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\tdataKey={dataKey}\n\t\t\t\t\t\t\tfill={barColor}\n\t\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\tdataKey=\"sevenDayAvg\"\n\t\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\t\tstroke={lineColor}\n\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tformatter={tooltipValueFormatter}\n\t\t\t\t\t\t\tlabelFormatter={tooltipLabelFormatter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CartesianGrid vertical={false} opacity={0.5} />\n\t\t\t\t\t</ComposedChart>\n\t\t\t\t</ResponsiveContainer>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"d-flex align-items-center justify-content-center\"\n\t\t\t\t\tstyle={{ height: \"250px\" }}\n\t\t\t\t>\n\t\t\t\t\t<ClipLoader size={100} color={barColor} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport { parseISO, format } from \"date-fns\";\nimport { formatPercentage } from \"../utils/utils\";\nimport {\n\tResponsiveContainer,\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n} from \"recharts\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst DATA_DISPLAY_NAMES = {\n\tpartialVaccinationsPerHundred: \"At least one dose\",\n\tpartialVaccinations: \"At least one dose\",\n\tfullVaccinationsPerHundred: \"Fully vaccinated\",\n\tfullVaccinations: \"Fully vaccinated\",\n};\n\nconst xAxisTickFormatter = (dateStr) => {\n\tconst date = parseISO(dateStr);\n\tif (date.getMonth() % 2 === 0) {\n\t\treturn format(date, \"MMM d\");\n\t}\n\treturn \"\";\n};\n\nconst tooltipValueFormatter = (value, name) => {\n\treturn [formatPercentage(value), DATA_DISPLAY_NAMES[name]];\n};\n\nconst tooltipLabelFormatter = (dateStr) => {\n\treturn format(parseISO(dateStr), \"MMM d, yyyy\");\n};\n\nexport default function VaxChart({ data }) {\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"text-muted\">Vaccinations</h4>\n\t\t\t{data ? (\n\t\t\t\t<ResponsiveContainer height={250} width=\"100%\">\n\t\t\t\t\t<AreaChart data={data}>\n\t\t\t\t\t\t<XAxis\n\t\t\t\t\t\t\tdataKey=\"date\"\n\t\t\t\t\t\t\taxisLine={false}\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\ttickFormatter={xAxisTickFormatter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\taxisLine={false}\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\ttickFormatter={formatPercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Area\n\t\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\t\tdataKey=\"partialVaccinationsPerHundred\"\n\t\t\t\t\t\t\tstroke=\"#3aa757\"\n\t\t\t\t\t\t\tfill=\"#aad9b6\"\n\t\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Area\n\t\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\t\tdataKey=\"fullVaccinationsPerHundred\"\n\t\t\t\t\t\t\tfill=\"#5fb877\"\n\t\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tformatter={tooltipValueFormatter}\n\t\t\t\t\t\t\tlabelFormatter={tooltipLabelFormatter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CartesianGrid vertical={false} opacity={0.5} />\n\t\t\t\t\t</AreaChart>\n\t\t\t\t</ResponsiveContainer>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"d-flex align-items-center justify-content-center\"\n\t\t\t\t\tstyle={{ height: \"250px\" }}\n\t\t\t\t>\n\t\t\t\t\t<ClipLoader size={100} color={\"#5fb877\"} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","const stateNames = {\n\tAL: \"Alabama\",\n\tAK: \"Alaska\",\n\tAZ: \"Arizona\",\n\tAR: \"Arkansas\",\n\tCA: \"California\",\n\tCO: \"Colorado\",\n\tCT: \"Connecticut\",\n\tDE: \"Delaware\",\n\tDC: \"District of Columbia\",\n\tFL: \"Florida\",\n\tGA: \"Georgia\",\n\tHI: \"Hawaii\",\n\tID: \"Idaho\",\n\tIL: \"Illinois\",\n\tIN: \"Indiana\",\n\tIA: \"Iowa\",\n\tKS: \"Kansas\",\n\tKY: \"Kentucky\",\n\tLA: \"Louisiana\",\n\tME: \"Maine\",\n\tMD: \"Maryland\",\n\tMA: \"Massachusetts\",\n\tMI: \"Michigan\",\n\tMN: \"Minnesota\",\n\tMP: \"Northern Mariana Islands\",\n\tMS: \"Mississippi\",\n\tMO: \"Missouri\",\n\tMT: \"Montana\",\n\tNE: \"Nebraska\",\n\tNV: \"Nevada\",\n\tNH: \"New Hampshire\",\n\tNJ: \"New Jersey\",\n\tNM: \"New Mexico\",\n\tNY: \"New York\",\n\tNC: \"North Carolina\",\n\tND: \"North Dakota\",\n\tOH: \"Ohio\",\n\tOK: \"Oklahoma\",\n\tOR: \"Oregon\",\n\tPA: \"Pennsylvania\",\n\tPR: \"Puerto Rico\",\n\tRI: \"Rhode Island\",\n\tSC: \"South Carolina\",\n\tSD: \"South Dakota\",\n\tTN: \"Tennessee\",\n\tTX: \"Texas\",\n\tUT: \"Utah\",\n\tVT: \"Vermont\",\n\tVA: \"Virginia\",\n\tWA: \"Washington\",\n\tWV: \"West Virginia\",\n\tWI: \"Wisconsin\",\n\tWY: \"Wyoming\",\n};\n\nexport default stateNames;","import { useContext, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport ComposedBarLineChart from \"./ComposedBarLineChart\";\nimport VaxChart from \"./VaxChart\";\nimport CovidDataContext from \"../context/CovidDataContext\";\nimport { transformStateData } from \"../utils/utils\";\nimport stateNames from \"../utils/stateNames\";\n\nconst getStateDataUrl = (state) =>\n\t`https://api.covidactnow.org/v2/state/${state}.timeseries.json?apiKey=ec111c8b31de4650afe99b42a469b6d6`;\n\nexport default function StatePage() {\n\tconst { pathname } = useLocation();\n\tconst stateName = pathname.split(\"/state/\")[1] || \"\";\n\n\tconst { stateData, setStateData } = useContext(CovidDataContext);\n\n\tuseEffect(() => {\n\t\tif (!stateData[stateName]) {\n\t\t\tfetch(getStateDataUrl(stateName))\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((json) =>\n\t\t\t\t\tsetStateData({\n\t\t\t\t\t\t...stateData,\n\t\t\t\t\t\t[stateName]: transformStateData(json),\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.catch((err) => console.log(err));\n\t\t}\n\t}, [stateData, setStateData, stateName]);\n\n\t// console.log(stateData[stateName]);\n\n\treturn (\n\t\t<div className=\"\">\n\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\n\t\t\t\t\t\t{stateName}\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</nav>\n\n\t\t\t<h2>{stateNames[stateName]}</h2>\n\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-xl-6 col-l-12 p-3\">\n\t\t\t\t\t<ComposedBarLineChart\n\t\t\t\t\t\tdata={stateData[stateName]}\n\t\t\t\t\t\tdataKey=\"newCases\"\n\t\t\t\t\t\ttitle=\"New cases\"\n\t\t\t\t\t\tbarColor=\"#8884d8\"\n\t\t\t\t\t\tlineColor=\"#3531a4\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-xl-6 col-l-12 p-3\">\n\t\t\t\t\t<ComposedBarLineChart\n\t\t\t\t\t\tdata={stateData[stateName]}\n\t\t\t\t\t\tdataKey=\"newDeaths\"\n\t\t\t\t\t\ttitle=\"New deaths\"\n\t\t\t\t\t\tbarColor=\"#a4a4a4\"\n\t\t\t\t\t\tlineColor=\"#545454\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-xl-6 col-l-12 p-3\">\n\t\t\t\t\t<ComposedBarLineChart\n\t\t\t\t\t\tdata={stateData[stateName]}\n\t\t\t\t\t\tdataKey=\"hospitalizations\"\n\t\t\t\t\t\ttitle=\"Hospitalizations\"\n\t\t\t\t\t\tbarColor=\"#d25e5e\"\n\t\t\t\t\t\tlineColor=\"#832828\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-xl-6 col-l-12 p-3\">\n\t\t\t\t\t<VaxChart data={stateData[stateName]} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { useState } from \"react\";\nimport CovidDataContext from \"./CovidDataContext\";\n\nconst CovidDataProvider = ({ children }) => {\n\tconst [overviewData, setOverviewData] = useState([]);\n\tconst [stateData, setStateData] = useState({});\n\n\treturn (\n\t\t<CovidDataContext.Provider\n\t\t\tvalue={{\n\t\t\t\toverviewData,\n\t\t\t\tstateData,\n\t\t\t\tsetOverviewData,\n\t\t\t\tsetStateData,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</CovidDataContext.Provider>\n\t);\n};\n\nexport default CovidDataProvider;\n","import React from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport StatePage from \"./components/StatePage\";\nimport CovidDataProvider from \"./context/CovidDataProvider\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container pt-5 d-flex flex-column\">\n\t\t\t<CovidDataProvider>\n\t\t\t\t<Router basename=\"/covid-data\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Table} />\n\t\t\t\t\t\t<Route path=\"/state\" component={StatePage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</CovidDataProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}